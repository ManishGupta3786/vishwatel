{"version":3,"file":"static/js/3911.b3566b3a.chunk.js","mappings":"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","sources":["pages/Customer/Account/ChangePassword/index.page.js"],"sourcesContent":["/* eslint-disable no-unreachable */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useAuthStore } from \"../../../../redux\";\nimport {\n  Password as TextPassword,\n  CommonButton,\n  PageHeader,\n  AcountSidebar,\n} from \"../../../../components/index\";\n// import { validateEmailPhone } from \"../../../../utils/validation\";\nimport { changePassword, userlogin } from \"../../../../services/apiServices\";\nimport { modalNotification } from \"../../../../utils\";\nimport adminRouteMap from \"../../../../routeControl/customerRouteMap\";\n\nfunction AdminChangePassword() {\n  const [asideView, setAsideView] = useState(false);\n  const [currentPassword, setCurrentPassword] = useState(false);\n  const [newPassword, setNewPassword] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const { loginInfo, updateLoginInfo } = useAuthStore();\n  const asideToggle = () => {\n    setAsideView(!asideView);\n  };\n  if (asideView) {\n    document.querySelector(\"body\").classList.add(\"toggle-shown\");\n  } else {\n    document.querySelector(\"body\").classList.remove(\"toggle-shown\");\n  }\n  const navigate = useNavigate();\n  const submitForm = async (values) => {\n    setShowLoading(true);\n    const payload = {\n      currentpassword: values.password,\n      newpassword: values.current_password,\n    };\n\n    try {\n      const { data: response } = await changePassword(payload, loginInfo.token);\n      setShowLoading(false);\n      if (response?.statusCode === 200) {\n        modalNotification({\n          type: \"success\",\n          message: response.message,\n        });\n      } else {\n        modalNotification({\n          type: \"error\",\n          message: response.message,\n        });\n      }\n    } catch (error) {\n      setShowLoading(false);\n      modalNotification({\n        type: \"error\",\n        message: error,\n      });\n    }\n  };\n  return (\n    <>\n      <div className=\"nk-block\">\n        <div className=\"card\">\n          <div className=\"card-aside-wrap\">\n            <div className=\"card-inner card-inner-lg\">\n              <div className=\"nk-block-head nk-block-head-lg\">\n                <div className=\"nk-block-between\">\n                  <PageHeader heading=\"Change Password\">\n                    <p>Set a unique password to protect your account.</p>\n                  </PageHeader>\n                  <div className=\"nk-block-head-content align-self-start d-lg-none\">\n                    <Link\n                      to=\"#\"\n                      onClick={() => asideToggle()}\n                      className={`toggle btn btn-icon btn-trigger mt-n1 ${\n                        asideView ? \"active\" : \"\"\n                      }`}\n                    >\n                      <em className=\"icon ni ni-menu-alt-r\" />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"nk-block wide-xs\">\n                <Formik\n                  enableReinitialize\n                  initialValues={{\n                    current_password: \"\", //  pravav@gmail.com\n                    password: \"\", //\n                  }}\n                  validationSchema={Yup.object().shape({\n                    current_password: Yup.string().required(\n                      \"Please enter new password.\"\n                    ),\n                    password: Yup.string().required(\"Please old password.\"),\n                    confirm_password: Yup.string()\n                      .required(\"Please re-enter password.\")\n                      .when(\"current_password\", {\n                        is: (val) => !!(val && val.length > 0),\n                        then: Yup.string().oneOf(\n                          [Yup.ref(\"current_password\")],\n                          \"Both password need to be the same\"\n                        ),\n                      }),\n                  })}\n                  onSubmit={(values) => {\n                    submitForm(values);\n                    values.password = \"\";\n                    values.current_password = \"\";\n                    values.confirm_password = \"\";\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    touched,\n                    values,\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      <div className=\"form-group\">\n                        <div className=\"form-label-group\">\n                          <label className=\"form-label\" htmlFor=\"password\">\n                            Old Password\n                          </label>\n                        </div>\n                        <div className=\"form-control-wrap\">\n                          <TextPassword\n                            className=\"form-control form-control-lg\"\n                            name=\"password\"\n                            placeholder=\"Enter current password\"\n                            onChange={handleChange}\n                            value={values.password}\n                            type={currentPassword ? \"text\" : \"password\"}\n                            toggleIcon={\n                              <Link\n                                to=\"#\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  setCurrentPassword(!currentPassword);\n                                }}\n                                className=\"form-icon lg form-icon-right passcode-switch\"\n                                data-target=\"password\"\n                              >\n                                <em\n                                  className={`passcode-icon icon-show icon ni ni-eye${\n                                    currentPassword ? \"\" : \"-off\"\n                                  } `}\n                                />\n                              </Link>\n                            }\n                            icon=\"\"\n                          />\n                        </div>\n                        {touched.password && errors.password ? (\n                          <span style={{ color: \"red\" }}>\n                            {errors.password}\n                          </span>\n                        ) : null}\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"form-label-group\">\n                          <label className=\"form-label\" htmlFor=\"password\">\n                            New Password\n                          </label>\n                        </div>\n                        <div className=\"form-control-wrap\">\n                          <TextPassword\n                            className=\"form-control form-control-lg\"\n                            name=\"current_password\"\n                            placeholder=\"Enter new password\"\n                            onChange={handleChange}\n                            value={values.current_password}\n                            type={newPassword ? \"text\" : \"password\"}\n                            toggleIcon={\n                              <Link\n                                to=\"#\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  setNewPassword(!newPassword);\n                                }}\n                                className=\"form-icon lg form-icon-right passcode-switch\"\n                                data-target=\"password\"\n                              >\n                                <em\n                                  className={`passcode-icon icon-show icon ni ni-eye${\n                                    newPassword ? \"\" : \"-off\"\n                                  } `}\n                                />\n                              </Link>\n                            }\n                            icon=\"\"\n                          />\n                        </div>\n                        {touched.current_password && errors.current_password ? (\n                          <span style={{ color: \"red\" }}>\n                            {errors.current_password}\n                          </span>\n                        ) : null}\n                      </div>\n                      <div className=\"form-group passwordInfo\">\n                        <h6>Password contains:</h6>\n                        <p className=\"text-success mb-1\">\n                          <em className=\"icon ni ni-check\" /> At least 1 Capital\n                          Letter.\n                        </p>\n                        <p className=\"text-success mb-1\">\n                          <em className=\"icon ni ni-check\" /> At least 1 Special\n                          Character &amp; 1 Number.\n                        </p>\n                        <p className=\"text-danger mb-1\">\n                          <em className=\"icon ni ni-check\" /> 6-15 characters\n                          long.\n                        </p>\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"form-label-group\">\n                          <label className=\"form-label\" htmlFor=\"password\">\n                            Confirm New Password\n                          </label>\n                        </div>\n                        <div className=\"form-control-wrap\">\n                          <TextPassword\n                            className=\"form-control form-control-lg\"\n                            name=\"confirm_password\"\n                            placeholder=\"Confirm new password\"\n                            onChange={handleChange}\n                            value={values.confirm_password}\n                            type={confirmPassword ? \"text\" : \"password\"}\n                            toggleIcon={\n                              <Link\n                                to=\"#\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  setConfirmPassword(!confirmPassword);\n                                }}\n                                className=\"form-icon lg form-icon-right passcode-switch\"\n                                data-target=\"password\"\n                              >\n                                <em\n                                  className={`passcode-icon icon-show icon ni ni-eye${\n                                    confirmPassword ? \"\" : \"-off\"\n                                  } `}\n                                />\n                              </Link>\n                            }\n                            icon=\"\"\n                          />\n                        </div>\n                        {touched.confirm_password && errors.confirm_password ? (\n                          <span style={{ color: \"red\" }}>\n                            {errors.confirm_password}\n                          </span>\n                        ) : null}\n                      </div>\n                      <div className=\"form-group\">\n                        <CommonButton\n                          extraClassName=\"btn btn-lg btn-primary btn-block\"\n                          // loading={loading}\n                          htmlType=\"button\"\n                          type=\"submit\"\n                        >\n                          Update Password\n                        </CommonButton>\n                      </div>\n                    </form>\n                  )}\n                </Formik>\n              </div>\n            </div>\n            <AcountSidebar asideView={asideView} asideToggle={asideToggle} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default AdminChangePassword;\n"],"names":["asideView","setAsideView","useState","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","showLoading","setShowLoading","loginInfo","updateLoginInfo","useAuthStore","asideToggle","document","querySelector","classList","add","remove","useNavigate","_jsx","_Fragment","children","className","_jsxs","PageHeader","heading","Link","to","onClick","concat","Formik","enableReinitialize","initialValues","current_password","password","validationSchema","Yup","shape","required","confirm_password","when","is","val","length","then","oneOf","onSubmit","values","async","payload","currentpassword","newpassword","data","response","changePassword","token","statusCode","modalNotification","type","message","error","submitForm","_ref","errors","handleBlur","handleChange","handleSubmit","touched","htmlFor","TextPassword","name","placeholder","onChange","value","toggleIcon","e","preventDefault","icon","style","color","CommonButton","extraClassName","htmlType","AcountSidebar"],"sourceRoot":""}