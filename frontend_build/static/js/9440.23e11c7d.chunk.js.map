{"version":3,"file":"static/js/9440.23e11c7d.chunk.js","mappings":"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","sources":["pages/Customer/Login/index.page.js","utils/validation.js"],"sourcesContent":["/* eslint-disable spaced-comment */\n/* eslint-disable no-unused-vars */\n/* eslint-disable import/newline-after-import */\nimport React, { useState } from \"react\";\nimport { json, Link, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useAuthStore } from \"../../../redux\";\nimport {\n  AuthLogo,\n  CommonButton,\n  Input as TextInput,\n  Password as TextPassword,\n} from \"../../../components\";\nimport { modalNotification } from \"../../../utils\";\n// import { Input as TextInput, Password as TextPassword} from \"../../../index\";\nimport adminRouteMap from \"../../../routeControl/customerRouteMap\";\nimport { userlogin } from \"../../../services/apiServices\";\nimport { validateEmailPhone } from \"../../../utils/validation\";\n\nfunction Login() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const { loginInfo, updateLoginInfo } = useAuthStore();\n  const navigate = useNavigate();\n  const submitForm = async (values) => {\n    setShowLoading(true);\n    const payload = {\n      email: values.userName,\n      password: values.password,\n    };\n    try {\n      const { data: response } = await userlogin(payload);\n      setShowLoading(false);\n      if (response?.statusCode === 200) {\n        //dispatch(updateLoginInfo(response));\n        let result = response.userData;\n        result.token = response.token;\n        updateLoginInfo(result);\n        navigate(adminRouteMap.DASHBOARDUSER.path);\n      } else {\n        //dispatch(updateLoginInfo({}));\n        modalNotification({\n          type: \"error\",\n          message: response.message,\n        });\n      }\n    } catch (error) {\n      setShowLoading(false);\n      modalNotification({\n        type: \"error\",\n        message: error,\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"nk-block nk-block-middle nk-auth-body  wide-xs\">\n        <AuthLogo />\n        <div className=\"card\">\n          <div className=\"card-inner card-inner-lg\">\n            <div className=\"nk-block-head\">\n              <div className=\"nk-block-head-content\">\n                <h4 className=\"nk-block-title\">Sign-In</h4>\n                <div className=\"nk-block-des\">\n                  <p>\n                    Access the Vishwatel panel using your email and password.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <>\n              <Formik\n                initialValues={{\n                  userName: \"\", //  pravav@gmail.com\n                  password: \"\", //\n                }}\n                validationSchema={Yup.object().shape({\n                  userName: Yup.string()\n                    .required(\"Please enter email id.\")\n                    .test(\n                      \"Field validation\",\n                      \"Please enter valid email id\",\n                      (value) => validateEmailPhone(value)\n                    ),\n                  password: Yup.string()\n                    .max(255)\n                    .required(\"Please enter password\"),\n                })}\n                onSubmit={(values) => {\n                  // eslint-disable-next-line no-console\n                  console.log(\"values\", values);\n                  submitForm(values);\n                }}\n              >\n                {({\n                  errors,\n                  handleBlur,\n                  handleChange,\n                  handleSubmit,\n                  touched,\n                  values,\n                }) => (\n                  <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                      <div className=\"form-label-group\">\n                        <label className=\"form-label\" htmlFor=\"email\">\n                          Email\n                        </label>\n                      </div>\n\n                      <div className=\"form-control-wrap\">\n                        <TextInput\n                          id=\"email\"\n                          className=\"form-control form-control-lg\"\n                          name=\"userName\"\n                          disabled={false}\n                          variant=\"standard\"\n                          type=\"email\"\n                          placeholder=\"Enter your email address\"\n                          setFieldValue=\"\"\n                          icon=\"\"\n                          // touched={touched.userName}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.userName}\n                        />\n                        {touched.userName && errors.userName ? (\n                          <span style={{ color: \"red\" }}>\n                            {errors.userName}\n                          </span>\n                        ) : null}\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <div className=\"form-label-group\">\n                        <label className=\"form-label\" htmlFor=\"password\">\n                          Password\n                        </label>\n                        {/* {moduleRoutesMap.FORGOT_PASSWORD.path} */}\n                        <Link className=\"link link-primary link-sm\" to=\"\">\n                          Forgot Password?\n                        </Link>\n                      </div>\n                      <div className=\"form-control-wrap\">\n                        <TextPassword\n                          className=\"form-control form-control-lg\"\n                          name=\"password\"\n                          placeholder=\"Enter your password\"\n                          setFieldValue=\"\"\n                          type={showPassword ? \"text\" : \"password\"}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.password}\n                          toggleIcon={\n                            <Link\n                              to=\"#\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                setShowPassword(!showPassword);\n                              }}\n                              className=\"form-icon lg form-icon-right passcode-switch\"\n                              data-target=\"password\"\n                            >\n                              <em\n                                className={`passcode-icon icon-show icon ni ni-eye${\n                                  showPassword ? \"\" : \"-off\"\n                                } `}\n                              />\n                            </Link>\n                          }\n                          icon=\"\"\n                        />\n                        {touched.password && errors.password ? (\n                          <span style={{ color: \"red\" }}>\n                            {errors.password}\n                          </span>\n                        ) : null}\n                      </div>\n                    </div>\n                    {/* <div className=\"form-group\">\n                            <div className=\"d-flex justify-content-between\">\n                            <div className=\"custom-control custom-control-sm custom-checkbox\">\n                                <CustomCheckbox\n                                className=\"custom-control-input\"\n                                id=\"checkbox\"\n                                name=\"rememberMe\"\n                                // checked={props.values?.rememberMe}\n                                >\n                                <label className=\"custom-control-label\" htmlFor=\"checkbox\">\n                                    {t(\"text.adminLogin.rememberMe\")}\n                                </label>\n                                </CustomCheckbox>\n                            </div>\n                            <Link\n                                className=\"link link-primary link-sm\"\n                                to={moduleRoutesMap[user].FORGOT_PASSWORD.path}\n                            >\n                                {t(\"text.adminLogin.forgotPasswordLink\")}\n                            </Link>\n                            </div>\n                        </div> */}\n                    <div className=\"form-group\">\n                      <CommonButton\n                        extraClassName=\"btn-lg btn-block\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        // loading={loading}\n                        //onClick={() => loginSuccessfully()}\n                        // htmlType=\"button\"\n                        // type=\"submit\"\n                      >\n                        Sign In\n                      </CommonButton>\n                      Do You Need An Account\n                      <Link\n                        className=\"link link-primary link-sm\"\n                        to=\"/customer-signup\"\n                      >\n                        Sign Up\n                      </Link>\n                    </div>\n                  </form>\n                )}\n              </Formik>\n            </>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","export const validateEmailPhone = (text) => {\n  if (\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n      text\n    )\n  ) {\n    return true;\n  } else if (/^[6789][0-9]{9}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validatePassword = (text) => {\n  if (\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^)(#])[A-Za-z\\d@$!%*?&^)(#]{8,15}$/.test(\n      text\n    )\n  ) {\n    // Xyz@123!@#\n    return true;\n  }\n  return false;\n};\n\nexport const validatePincode = (pinCode) => {\n  if (/^[1-9][0-9]{5}$/.test(pinCode)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validatePan = (panNumber) => {\n  if (\n    /^([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}?$/.test(panNumber) &&\n    panNumber.charAt(3) === \"P\"\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateURL = (url) => {\n  const reg =\n    /^(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/;\n  return reg.test(String(url).toLowerCase());\n};\n\nexport const validateEmail = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexport const validateZipCode = (otp) => {\n  if (/^[0-9]{4}$/.test(otp)) {\n    return true;\n  }\n  return false;\n};\nexport const validateAddressText = (text) => {\n  if (text !== \"\" && text !== undefined) {\n    return true;\n  }\n  return false;\n};\nexport const validateNumber = (number) => {\n  if (/^\\d+$/.test(number)) {\n    return true;\n  }\n  return false;\n};\nexport const validateNumberWithDecimal = (number) => {\n  if (/^\\d+(\\.\\d{1,2})?$/.test(number)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateMobileEmpty = (number) => {\n  if (/^[6789][0-9]{9}$/.test(number)) {\n    return true;\n  }\n  if (number === \"\") return true;\n  return false;\n};\n\nexport const validateCurrency = (number) => {\n  if (/^[1-9][0-9,]{1,}$/.test(number)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateOtp = (otp) => {\n  if (/^([ESLOAN])\\w+([0-9]{4})$/.test(otp)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateText = (text) => {\n  // console.log(text)\n  if (/^[a-zA-Z.\\- ]{1,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\nexport const validateTextWithNum = (text) => {\n  // console.log(text)\n  if (/^[a-zA-Z0-9.\\- ]{1,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAlphanumericText = (text) => {\n  if (/^[a-zA-Z0-9!@#$&()/\\-`'.+,\" ]{1,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAlphanumericTextIfsc = (text) => {\n  if (/^[a-zA-Z0-9]{11}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAlphanumericTextCompany = (text) => {\n  if (/^[a-zA-Z0-9!@#$&()/\\-`'.+,\" ]{2,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAlphanumericWithoutSC = (text) => {\n  if (/^[a-z0-9]*$/i.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateTextForSearchInput = (text) => {\n  if (/^[\\w()-. -]{3,70}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAccountNumbers = (bankAccountNo, reaccountNumber) => {\n  if (bankAccountNo !== reaccountNumber) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAccountNo = (text) => {\n  if (/^\\d{6,18}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateReAccountNo = (text, accountNo) => {\n  if (/^\\d{6,18}$/.test(text) && text === accountNo) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateIfscCode = (text) => {\n  if (/^[A-Z|a-z]{4}[0][\\d]{6}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateUpiId = (text) => {\n  if (/^\\w+@\\w+$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateDate = (text) => {\n  if (\n    /^(19[5-9][0-9]|20[0-4][0-9]|2050)[-/](0?[1-9]|1[0-2])[-/](0?[1-9]|[12][0-9]|3[01])$/.test(\n      text\n    )\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateTextWithSplChars = (text) => {\n  if (/^[-a-zA-Z. ]{1,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateMobile = (number) => {\n  if (/^[6789][0-9]{9}$/.test(number)) {\n    return true;\n  }\n  return false;\n};\n"],"names":["showPassword","setShowPassword","useState","showLoading","setShowLoading","loginInfo","updateLoginInfo","useAuthStore","navigate","useNavigate","_jsx","_Fragment","children","_jsxs","className","AuthLogo","Formik","initialValues","userName","password","validationSchema","Yup","shape","required","test","value","validateEmailPhone","max","onSubmit","values","console","log","async","payload","email","data","response","userlogin","statusCode","result","userData","token","adminRouteMap","DASHBOARDUSER","path","modalNotification","type","message","error","submitForm","_ref","errors","handleBlur","handleChange","handleSubmit","touched","htmlFor","TextInput","id","name","disabled","variant","placeholder","setFieldValue","icon","onBlur","onChange","style","color","Link","to","TextPassword","toggleIcon","onClick","e","preventDefault","concat","CommonButton","extraClassName","text"],"sourceRoot":""}