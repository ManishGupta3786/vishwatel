{"version":3,"file":"static/js/747.f6da6b9f.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","components/UiElement/Modal/Index.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction ModalComponent({ \n  title,\n  children,\n  show,\n  modalExtraClass = \"\",\n  extraClassName = \"\",\n  extraTitleClassName = \"\",\n  onHandleVisible,\n  onHandleCancel,\n  closeButton = true,\n  backdrop = \"static\",\n  size = \"\"\n }) {\n  return (\n    <Modal className={modalExtraClass}\n    show={show}\n    onHide={onHandleCancel}\n    onHandleShow={onHandleVisible}\n    backdrop={backdrop}\n    keyboard={false}\n    dialogClassName={extraClassName}\n    size={size}\n    centered>\n      <Modal.Header\n          className={`${extraTitleClassName}`}\n          closeButton={closeButton}\n          // closeVariant=\"white\"\n        >\n          {title ? (\n            <Modal.Title as=\"h5\">\n              {title}\n            </Modal.Title>\n          ) : (\n            \"\"\n          )}\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ModalComponent;\n"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","ModalBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","ModalDialog","contentClassName","centered","fullscreen","children","scrollable","dialogClass","concat","fullScreenClass","ModalFooter","ModalHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","useState","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","useCallbackRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","value","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Object","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","title","modalExtraClass","extraClassName","extraTitleClassName","onHandleVisible","onHandleCancel","_jsxs","onHandleShow"],"sourceRoot":""}