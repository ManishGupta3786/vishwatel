{"version":3,"file":"static/js/3567.c1681b76.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","body","resolveContainerRef","ref","document","canUseDOM","getBoundingClientRect","ImperativeTransition","_ref2","children","in","inProp","onExited","onEntered","transition","exited","setExited","useState","_ref","onTransition","isInitialRef","handleTransition","useEventCallback","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","combinedRef","useMergedRefs","cloneElement","renderTransition","Component","runTransition","props","_jsx","Object","assign","NoopTransition","_excluded","manager","useModalManager","provided","window","useWindow","modalManager","ModalManager","getManager","modal","dialog","backdrop","add","remove","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","className","style","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","container","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","undefined","tabIndex","React","unmountOnExit","mountOnEnter","appear","arguments","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","constructor","handleContainerOverflow","isRTL","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","overflow","paddingProp","scrollBarWidth","concat","parseInt","css","setAttribute","reset","forEach","m","removeContainerStyle","removeAttribute","modalIdx","push","state","splice","hasEnteredRef","handleExited","child","propTypes","PropTypes","variant","CloseButton","ariaLabel","type","classNames","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","classList","baseVal","hasClass","marginProp","qsa","el","sharedManager","getSharedManager","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","timeout","handleEnter","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","p"],"sourceRoot":""}