{"version":3,"file":"static/js/5411.92cec4d0.chunk.js","mappings":"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","sources":["pages/Customer/Account/Profile/index.page.js"],"sourcesContent":["/* eslint-disable no-use-before-define */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { modalNotification } from \"../../../../utils\";\nimport {\n  AcountSidebar,\n  CommonButton,\n  //   Breadcrumb,\n  Input as TextInput,\n  MetaTags,\n  ModalComponent,\n  PageHeader,\n  //   PageHeader,\n  //   ProfileForm,\n} from \"../../../../components\";\nimport { useAuthStore } from \"../../../../redux\";\nimport {\n  getUserDataById,\n  updateProfile,\n} from \"../../../../services/apiServices\";\n\nfunction AdminProfile() {\n  const { loginInfo, updateLoginInfo } = useAuthStore();\n  const [showEdit, setShowEdit] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    getUserDetails();\n  }, []);\n\n  // GetUserDetailsBy Id\n\n  const getUserDetails = async () => {\n    setShowLoading(true);\n    try {\n      const { data: response } = await getUserDataById({}, loginInfo.token);\n      setShowLoading(false);\n      if (response?.statusCode === 200) {\n        setUserData(response.userData);\n        modalNotification({\n          type: \"success\",\n          message: response.message,\n        });\n      } else {\n        modalNotification({\n          type: \"error\",\n          message: response.message,\n        });\n      }\n    } catch (error) {\n      setShowLoading(false);\n      modalNotification({\n        type: \"error\",\n        message: error,\n      });\n    }\n  };\n  const editProfileModal = () => {\n    setShowEdit(true);\n  };\n  const closeEditProfileModal = () => {\n    setShowEdit(false);\n  };\n  const [asideView, setAsideView] = useState(false);\n  const asideToggle = () => {\n    setAsideView(!asideView);\n  };\n  if (asideView) {\n    document.querySelector(\"body\").classList.add(\"toggle-shown\");\n  } else {\n    document.querySelector(\"body\").classList.remove(\"toggle-shown\");\n  }\n\n  const submitForm = async (values) => {\n    setShowLoading(true);\n    const payload = {\n      currentpassword: values.password,\n      newpassword: values.current_password,\n    };\n\n    try {\n      const { data: response } = await updateProfile(payload, loginInfo.token);\n      setShowLoading(false);\n      if (response?.statusCode === 200) {\n        modalNotification({\n          type: \"success\",\n          message: response.message,\n        });\n      } else {\n        modalNotification({\n          type: \"error\",\n          message: response.message,\n        });\n      }\n    } catch (error) {\n      setShowLoading(false);\n      modalNotification({\n        type: \"error\",\n        message: error,\n      });\n    }\n  };\n  console.log(\"userData\", userData);\n  return (\n    <>\n      <MetaTags title=\"\" />\n      {/* <div className=\"nk-block-head nk-block-head-sm\">\n            <div className=\"nk-block-between\">\n            <PageHeader heading={t(\"text.profile.title\")}>\n                <Breadcrumb breadcrumb={breadcrumb} />\n            </PageHeader>\n            </div>\n        </div> */}\n      <div className=\"nk-block\">\n        <div className=\"card\">\n          <div className=\"card-aside-wrap\">\n            <div className=\"card-inner card-inner-lg\">\n              <div className=\"nk-block-head nk-block-head-lg\">\n                <div className=\"nk-block-between\">\n                  <PageHeader heading=\"Personal Information\">\n                    <p>\n                      Basic info, like your name and address, that you use on\n                      Nio Platform.\n                    </p>\n                  </PageHeader>\n                  <div className=\"nk-block-head-content align-self-start d-lg-none\">\n                    <Link\n                      to=\"#\"\n                      onClick={() => asideToggle()}\n                      className={`toggle btn btn-icon btn-trigger mt-n1 ${\n                        asideView ? \"active\" : \"\"\n                      }`}\n                    >\n                      <em className=\"icon ni ni-menu-alt-r\" />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"nk-block\">\n                <div className=\"nk-data data-list\">\n                  <div className=\"data-head\">\n                    <h6 className=\"overline-title\">Basics</h6>\n                  </div>\n                  <div className=\"data-item\" onClick={() => editProfileModal()}>\n                    <div className=\"data-col\">\n                      <span className=\"data-label\">Full Name</span>\n                      <span className=\"data-value\">\n                        {userData?.first_name} {userData?.middle_name}\n                        {userData?.last_name}\n                      </span>\n                    </div>\n                    <div className=\"data-col data-col-end\">\n                      <span className=\"data-more\">\n                        <em className=\"icon ni ni-forward-ios\" />\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"data-item\" onClick={() => editProfileModal()}>\n                    <div className=\"data-col\">\n                      <span className=\"data-label\">Display Name</span>\n                      <span className=\"data-value\">\n                        {userData?.displayName}\n                      </span>\n                    </div>\n                    <div className=\"data-col data-col-end\">\n                      <span className=\"data-more\">\n                        <em className=\"icon ni ni-forward-ios\" />\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"data-item\">\n                    <div className=\"data-col\">\n                      <span className=\"data-label\">Email</span>\n                      <span className=\"data-value\">{userData?.email}</span>\n                    </div>\n                    <div className=\"data-col data-col-end\">\n                      <span className=\"data-more disable\">\n                        <em className=\"icon ni ni-lock-alt\" />\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <AcountSidebar asideView={asideView} asideToggle={asideToggle} />\n          </div>\n        </div>\n      </div>\n      <ModalComponent\n        closeButton={false}\n        extraTitleClassName=\"justify-content-center\"\n        onHandleCancel={() => {\n          setShowEdit(false);\n        }}\n        backdrop\n        show={showEdit}\n        title=\"Update Profile\"\n      >\n        <Formik\n          enableReinitialize\n          initialValues={{\n            firstName: userData?.first_name,\n            middleName: userData?.middle_name, //\n            lastName: userData?.last_name, //\n            displayName: userData?.dislay_name, //\n            email: userData?.email,\n          }}\n          validationSchema={Yup.object().shape({\n            firstName: Yup.string().required(\"Please enter first name.\"),\n            // middleName: Yup.string().required(\"Please enter middle name.\"),\n            lastName: Yup.string().required(\"Please enter last name.\"),\n          })}\n          onSubmit={(values) => {\n            submitForm(values);\n          }}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            touched,\n            values,\n          }) => (\n            <form className=\"w-100\" onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label className=\"form-label\" htmlFor=\"full-name\">\n                  Full Name\n                </label>\n                <div style={{ display: \"flex\" }}>\n                  <TextInput\n                    id=\"full-name\"\n                    className=\"form-control form-control-lg\"\n                    name=\"firstName\"\n                    variant=\"standard\"\n                    onChange={handleChange}\n                    value={values.firstName}\n                    type=\"text\"\n                    placeholder=\"Enter first name\"\n                    icon=\"\"\n                  />\n                  <TextInput\n                    id=\"full-name\"\n                    className=\"form-control form-control-lg\"\n                    name=\"middleName\"\n                    disabled={false}\n                    variant=\"standard\"\n                    type=\"text\"\n                    placeholder=\"Enter middle name\"\n                    onChange={handleChange}\n                    value={values.middleName}\n                    icon=\"\"\n                  />\n                  <TextInput\n                    id=\"full-name\"\n                    className=\"form-control form-control-lg\"\n                    name=\"lastName\"\n                    disabled={false}\n                    variant=\"standard\"\n                    type=\"text\"\n                    placeholder=\"Enter last name\"\n                    onChange={handleChange}\n                    value={values.lastName}\n                    icon=\"\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-label\" htmlFor=\"display-name\">\n                  Display Name\n                </label>\n                <TextInput\n                  id=\"display-name\"\n                  className=\"form-control form-control-lg\"\n                  name=\"displayName\"\n                  disabled={false}\n                  variant=\"standard\"\n                  type=\"text\"\n                  placeholder=\"Enter display name\"\n                  onChange={handleChange}\n                  value={values.displayName}\n                  icon=\"\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"form-label\" htmlFor=\"email\">\n                  Email\n                </label>\n                <TextInput\n                  id=\"email\"\n                  className=\"form-control form-control-lg\"\n                  name=\"email\"\n                  disabled\n                  variant=\"standard\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={handleChange}\n                  value={values.email}\n                  icon=\"\"\n                />\n              </div>\n              <div className=\"mt-4 align-center justify-content-center flex-wrap flex-sm-nowrap gx-1 gy-2\">\n                <div>\n                  {/* <Link\n                    href=\"#\"\n                    onClick={() => closeEditProfileModal()}\n                    className=\"btn btn-primary\"\n                  >\n                    Update Profile\n                  </Link> */}\n                  <CommonButton\n                    extraClassName=\"btn btn-lg btn-primary btn-block\"\n                    // loading={loading}\n                    htmlType=\"button\"\n                    type=\"submit\"\n                  >\n                    Update Profile\n                  </CommonButton>\n                </div>\n                <div>\n                  <Link\n                    href=\"#\"\n                    onClick={() => closeEditProfileModal()}\n                    className=\"btn btn-secondary\"\n                  >\n                    Cancel\n                  </Link>\n                </div>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </ModalComponent>\n    </>\n  );\n}\n\nexport default AdminProfile;\n"],"names":["loginInfo","updateLoginInfo","useAuthStore","showEdit","setShowEdit","useState","showLoading","setShowLoading","userData","setUserData","useEffect","getUserDetails","async","data","response","getUserDataById","token","statusCode","modalNotification","type","message","error","editProfileModal","asideView","setAsideView","asideToggle","document","querySelector","classList","add","remove","console","log","_jsxs","_Fragment","children","_jsx","MetaTags","title","className","PageHeader","heading","Link","to","onClick","concat","first_name","middle_name","last_name","displayName","email","AcountSidebar","ModalComponent","closeButton","extraTitleClassName","onHandleCancel","backdrop","show","Formik","enableReinitialize","initialValues","firstName","middleName","lastName","dislay_name","validationSchema","Yup","shape","required","onSubmit","values","payload","currentpassword","password","newpassword","current_password","updateProfile","submitForm","_ref","errors","handleBlur","handleChange","handleSubmit","touched","htmlFor","style","display","TextInput","id","name","variant","onChange","value","placeholder","icon","disabled","CommonButton","extraClassName","htmlType","href"],"sourceRoot":""}