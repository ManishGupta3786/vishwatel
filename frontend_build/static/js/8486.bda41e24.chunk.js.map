{"version":3,"file":"static/js/8486.bda41e24.chunk.js","mappings":"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","sources":["pages/Customer/CustomerSignup/index.page.js","utils/validation.js"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { DatePicker } from \"antd\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport moment from \"moment\";\nimport adminRouteMap from \"../../../routeControl/customerRouteMap\";\nimport {\n  AuthLogo,\n  CommonButton,\n  ImageElement,\n  ModalComponent,\n  Input as TextInput,\n  Password as TextPassword,\n} from \"../../../components\";\nimport { validateEmailPhone } from \"../../../utils/validation\";\nimport { signup, userlogin } from \"../../../services/apiServices\";\n// import { modalNotification } from \"../../../utils\";\n// import { Input as TextInput, Password as TextPassword} from \"../../../index\";\n// import customerRouteMap from \"../../../routeControl/customerRouteMap\";\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const [repeatPassword, setRepeatPassword] = useState(false);\n  // const navigate = useNavigate();\n  const [signupModal, setSignupModal] = useState(false);\n  const [signinModal, setSigninModal] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n\n  const loginSuccessfully = () => {\n    // modalNotification({\n    //   type: \"success\",\n    //   message: \"Signin Successfully\",\n    // });\n    // setTimeout(() => {\n    //   navigate(customerRouteMap.DASHBOARD.path);\n    // }, 2000);\n    setSignupModal(true);\n  };\n\n  const onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n\n  const handleSignModal = () => {\n    setSignupModal(false);\n    navigate(adminRouteMap.LOGIN.path);\n  };\n\n  const handleCloseModal = () => {\n    setSignupModal(false);\n    location.reload();\n  };\n\n  const submitForm = async (values) => {\n    setShowLoading(true);\n    console.log(\"values\", values);\n    const payload = {\n      phoneNo: values.mobile,\n      email: values.email,\n      firstName: values.firstname,\n      lastName: values.lastname,\n      company: values.company,\n      dateOfBirth: values.dob,\n      password: values.password,\n      userType: \"customer\",\n      customerType: values.customerType,\n      billing_name: values.billing_name,\n    };\n    try {\n      const { data: response } = await signup(payload);\n      setShowLoading(false);\n      if (response.statusCode === 200) {\n        setSignupModal(true);\n      } else {\n        alert(response.message);\n      }\n    } catch (error) {\n      setShowLoading(false);\n      console.log(\"error\", error);\n    }\n  };\n  const handleReset = () => {\n    location.reload();\n  };\n\n  const dateConverter = (str) => {\n    const date = new Date(str);\n    const mnth = `0${date.getMonth() + 1}`.slice(-2);\n    const day = `0${date.getDate()}`.slice(-2);\n    const year = date.getFullYear();\n    return `${year}-${mnth}-${day}`;\n  };\n  const disabledFutureDate = (current) => {\n    // Can not select days before today\n    return current && current > moment().endOf(\"day\");\n  };\n  return (\n    <>\n      <div className=\"authPage nk-block nk-block-middle nk-auth-body wide-xxl\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <AuthLogo />\n          </div>\n          <div className=\"card-inner card-inner-lg\">\n            <div className=\"nk-block-head\">\n              <div className=\"nk-block-head-content\">\n                <h4 className=\"nk-block-title text-center\">\n                  Customer Sign Up Process\n                </h4>\n              </div>\n            </div>\n            <>\n              <Formik\n                initialValues={{\n                  customerType: \"\",\n                  firstname: \"\",\n                  lastname: \"\",\n                  dob: \"\",\n                  company: \"\",\n                  email: \"\",\n                  module: \"\",\n                  password: \"\",\n                  confirm_password: \"\",\n                  billing_name: \"\",\n                }}\n                validationSchema={Yup.object().shape({\n                  customerType: Yup.string()\n                    .max(255)\n                    .required(\"Please enter customer type\"),\n                  email: Yup.string()\n                    .required(\"Please enter email id.\")\n                    .test(\n                      \"Field validation\",\n                      \"Please enter valid email id\",\n                      (value) => validateEmailPhone(value)\n                    ),\n                  mobile: Yup.string()\n                    .required(\"Please enter mobile number\")\n                    .test(\n                      \"Field validation\",\n                      \"Please enter valid mobile number\",\n                      (value) => validateEmailPhone(value)\n                    ),\n                  firstname: Yup.string()\n                    .max(255)\n                    .required(\"Please enter first name\"),\n                  lastname: Yup.string()\n                    .max(255)\n                    .required(\"Please enter last name\"),\n                  dob: Yup.string().max(255).required(\"Please enter dob\"),\n                  company: Yup.string()\n                    .max(255)\n                    .required(\"Please enter company name\"),\n                  password: Yup.string()\n                    .max(255)\n                    .required(\"Please enter password\"),\n                  confirm_password: Yup.string().when(\"password\", {\n                    is: (val) => !!(val && val.length > 0),\n                    then: Yup.string().oneOf(\n                      [Yup.ref(\"password\")],\n                      \"Confirm password do not match\"\n                    ),\n                  }),\n                  billing_name: Yup.string()\n                    .max(255)\n                    .required(\"Please select billing name\"),\n                })}\n                onSubmit={(values) => {\n                  console.log(\"values\", values);\n                  submitForm(values);\n                }}\n              >\n                {({\n                  errors,\n                  handleBlur,\n                  handleChange,\n                  handleSubmit,\n                  touched,\n                  values,\n                  setFieldValue,\n                }) => (\n                  <form onSubmit={handleSubmit}>\n                    <div className=\"authPage_radio d-md-flex ailgn-items-center justify-content-center mb-2 mb-lg-4\">\n                      <div className=\"form-check me-4\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"customerType\"\n                          id=\"individual\"\n                          value=\"Individual\"\n                          onChange={(event) => {\n                            setFieldValue(\"customerType\", event.target.value);\n                          }}\n                          // onChange={handleChange}\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"Individual\"\n                        >\n                          Individual\n                        </label>\n                      </div>\n\n                      <div className=\"form-check me-4\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"customerType\"\n                          id=\"business\"\n                          value=\"Business\"\n                          // onChange={handleChange}\n                          onChange={(event) => {\n                            setFieldValue(\"customerType\", event.target.value);\n                          }}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"business\">\n                          Business\n                        </label>\n                      </div>\n\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"customerType\"\n                          id=\"non-profit\"\n                          value=\"Organization\"\n                          // onChange={handleChange}\n                          onChange={(event) => {\n                            setFieldValue(\"customerType\", event.target.value);\n                          }}\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"non-profit\"\n                        >\n                          Non-profit Organization\n                        </label>\n                      </div>\n                      {touched.customerType && errors.customerType ? (\n                        <span style={{ color: \"red\" }}>\n                          {errors.customerType}\n                        </span>\n                      ) : null}\n                    </div>\n                    <Row>\n                      <Col sm={6}>\n                        <div className=\"form-group\">\n                          <div className=\"form-label-group\">\n                            <label className=\"form-label\" htmlFor=\"email\">\n                              First Name<span>*</span>\n                            </label>\n                          </div>\n                          <div className=\"form-control-wrap\">\n                            <TextInput\n                              autoComplete=\"new-password\"\n                              id=\"firstname\"\n                              className=\"form-control form-control-lg\"\n                              name=\"firstname\"\n                              value={values.firstname}\n                              variant=\"standard\"\n                              type=\"text\"\n                              placeholder=\"First Name\"\n                              icon=\"\"\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {touched.firstname && errors.firstname ? (\n                            <span style={{ color: \"red\" }}>\n                              {errors.firstname}\n                            </span>\n                          ) : null}\n                        </div>\n                      </Col>\n                      <Col sm={6}>\n                        <div className=\"form-group\">\n                          <div className=\"form-label-group\">\n                            <label className=\"form-label\" htmlFor=\"email\">\n                              Last Name<span>*</span>\n                            </label>\n                          </div>\n                          <div className=\"form-control-wrap\">\n                            <TextInput\n                              autoComplete=\"new-password\"\n                              id=\"lastname\"\n                              className=\"form-control form-control-lg\"\n                              name=\"lastname\"\n                              value={values.lastname}\n                              disabled={false}\n                              variant=\"standard\"\n                              type=\"text\"\n                              placeholder=\"Last Name\"\n                              icon=\"\"\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {touched.lastname && errors.lastname ? (\n                            <span style={{ color: \"red\" }}>\n                              {errors.lastname}\n                            </span>\n                          ) : null}\n                        </div>\n                      </Col>\n                      <Col sm={6}>\n                        <div className=\"form-group\">\n                          <div className=\"form-label-group\">\n                            <label className=\"form-label\" htmlFor=\"email\">\n                              DOB<span>*</span>\n                            </label>\n                          </div>\n                          <div className=\"form-control-wrap\">\n                            <DatePicker\n                              disabledDate={disabledFutureDate}\n                              className=\"form-control form-control-lg\"\n                              onChange={(event) => {\n                                console.log(\"event\", event);\n                                const formattedDate = dateConverter(event);\n                                setFieldValue(\"dob\", formattedDate);\n                              }}\n                              name=\"dob\"\n                            />\n                          </div>\n                          {touched.dob && errors.dob ? (\n                            <span style={{ color: \"red\" }}>{errors.dob}</span>\n                          ) : null}\n                        </div>\n                      </Col>\n                      <Col sm={6}>\n                        <div className=\"form-group\">\n                          <div className=\"form-label-group\">\n                            <label className=\"form-label\" htmlFor=\"email\">\n                              Company\n                            </label>\n                          </div>\n                          <div className=\"form-control-wrap\">\n                            <TextInput\n                              autoComplete=\"new-password\"\n                              id=\"company\"\n                              className=\"form-control form-control-lg\"\n                              name=\"company\"\n                              value={values.company}\n                              disabled={false}\n                              variant=\"standard\"\n                              type=\"text\"\n                              placeholder=\"Enter your company name\"\n                              icon=\"\"\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {touched.company && errors.company ? (\n                            <span style={{ color: \"red\" }}>\n                              {errors.company}\n                            </span>\n                          ) : null}\n                        </div>\n                      </Col>\n\n                      <Col sm={6}>\n                        <div className=\"form-group\">\n                          <div className=\"form-label-group\">\n                            <label className=\"form-label\" htmlFor=\"email\">\n                              Email<span>*</span>\n                            </label>\n                          </div>\n                          <div className=\"form-control-wrap\">\n                            <TextInput\n                              autoComplete=\"new-password\"\n                              id=\"email\"\n                              className=\"form-control form-control-lg\"\n                              name=\"email\"\n                              value={values.email}\n                              variant=\"standard\"\n                              type=\"text\"\n                              placeholder=\"Enter your email\"\n                              icon=\"\"\n                              onChange={handleChange}\n                            />\n                          </div>\n                          {touched.email && errors.email ? (\n                            <span style={{ color: \"red\" }}>{errors.email}</span>\n                          ) : null}\n                        </div>\n                      </Col>\n\n                      <Col sm={6}>\n                        <div className=\"form-group\">\n                          <div className=\"form-label-group\">\n                            <label className=\"form-label\" htmlFor=\"email\">\n                              Phone Number<span>*</span>\n                            </label>\n                          </div>\n                          <div className=\"form-control-wrap\">\n                            <TextInput\n                              autoComplete=\"new-password\"\n                              id=\"mobile\"\n                              className=\"form-control form-control-lg\"\n                              name=\"mobile\"\n                              value={values.mobile}\n                              onChange={handleChange}\n                              variant=\"standard\"\n                              type=\"text\"\n                              placeholder=\"Enter your number\"\n                              icon=\"\"\n                            />\n                          </div>\n                          {touched.mobile && errors.mobile ? (\n                            <span style={{ color: \"red\" }}>\n                              {errors.mobile}\n                            </span>\n                          ) : null}\n                        </div>\n                      </Col>\n\n                      <Col sm={6}>\n                        <div className=\"form-group\">\n                          <div className=\"form-label-group\">\n                            <label className=\"form-label\" htmlFor=\"password\">\n                              Password<span>*</span>\n                            </label>\n                          </div>\n                          <div className=\"form-control-wrap\">\n                            <TextPassword\n                              autoComplete=\"new-password\"\n                              className=\"form-control form-control-lg\"\n                              name=\"password\"\n                              value={values.password}\n                              onChange={handleChange}\n                              placeholder=\"Enter your password\"\n                              setFieldValue=\"\"\n                              type={showPassword ? \"text\" : \"password\"}\n                              toggleIcon={\n                                <Link\n                                  to=\"#\"\n                                  onClick={(e) => {\n                                    e.preventDefault();\n                                    setShowPassword(!showPassword);\n                                  }}\n                                  className=\"form-icon lg form-icon-right passcode-switch\"\n                                  data-target=\"password\"\n                                >\n                                  <em\n                                    className={`passcode-icon icon-show icon ni ni-eye${\n                                      showPassword ? \"\" : \"-off\"\n                                    } `}\n                                  />\n                                </Link>\n                              }\n                              icon=\"\"\n                            />\n                          </div>\n                          {touched.password && errors.password ? (\n                            <span style={{ color: \"red\" }}>\n                              {errors.password}\n                            </span>\n                          ) : null}\n                        </div>\n                      </Col>\n\n                      <Col sm={6}>\n                        <div className=\"form-group\">\n                          <div className=\"form-label-group\">\n                            <label className=\"form-label\" htmlFor=\"password\">\n                              Confirm Password<span>*</span>\n                            </label>\n                          </div>\n                          <div className=\"form-control-wrap\">\n                            <TextPassword\n                              autoComplete=\"new-password\"\n                              name=\"confirm_password\"\n                              className=\"form-control form-control-lg\"\n                              value={values.confirm_password}\n                              placeholder=\"Re-Enter your password\"\n                              onChange={handleChange}\n                              type={repeatPassword ? \"text\" : \"password\"}\n                              toggleIcon={\n                                <Link\n                                  to=\"#\"\n                                  onClick={(e) => {\n                                    e.preventDefault();\n                                    setRepeatPassword(!repeatPassword);\n                                  }}\n                                  className=\"form-icon lg form-icon-right passcode-switch\"\n                                  data-target=\"password\"\n                                >\n                                  <em\n                                    className={`passcode-icon icon-show icon ni ni-eye${\n                                      repeatPassword ? \"\" : \"-off\"\n                                    } `}\n                                  />\n                                </Link>\n                              }\n                              icon=\"\"\n                            />\n                          </div>\n                          {touched.confirm_password &&\n                          errors.confirm_password ? (\n                            <span style={{ color: \"red\" }}>\n                              {errors.confirm_password}\n                            </span>\n                          ) : null}\n                        </div>\n                      </Col>\n\n                      <Col>\n                        <div className=\"authPage_radio  authPage_radio-formBtm\">\n                          <div className=\"form-group mb-0\">\n                            <label className=\"form-label\">\n                              Billing Name<span>*</span>\n                            </label>\n\n                            <div className=\"d-md-flex ailgn-items-center justify-content-start\">\n                              <div className=\"form-check me-4\">\n                                <input\n                                  autoComplete=\"new-password\"\n                                  className=\"form-check-input\"\n                                  type=\"radio\"\n                                  name=\"billing_name\"\n                                  id=\"name\"\n                                  value=\"Name\"\n                                  onChange={(event) => {\n                                    setFieldValue(\n                                      \"billing_name\",\n                                      event.target.value\n                                    );\n                                  }}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor=\"name\"\n                                >\n                                  Name\n                                </label>\n                              </div>\n\n                              <div className=\"form-check me-4\">\n                                <input\n                                  autoComplete=\"new-password\"\n                                  className=\"form-check-input\"\n                                  type=\"radio\"\n                                  name=\"billing_name\"\n                                  id=\"company\"\n                                  value=\"Company\"\n                                  onChange={(event) => {\n                                    setFieldValue(\n                                      \"billing_name\",\n                                      event.target.value\n                                    );\n                                  }}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor=\"company\"\n                                >\n                                  Company\n                                </label>\n                              </div>\n\n                              <div className=\"form-check\">\n                                <input\n                                  autoComplete=\"new-password\"\n                                  className=\"form-check-input\"\n                                  type=\"radio\"\n                                  name=\"billing_name\"\n                                  id=\"both\"\n                                  value=\"Both\"\n                                  onChange={(event) => {\n                                    setFieldValue(\n                                      \"billing_name\",\n                                      event.target.value\n                                    );\n                                  }}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor=\"both\"\n                                >\n                                  Both (Name and Company)\n                                </label>\n                              </div>\n                              {touched.billing_name && errors.billing_name ? (\n                                <span style={{ color: \"red\" }}>\n                                  {errors.billing_name}\n                                </span>\n                              ) : null}\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                    <div className=\"authPage_btn form-group mt-lg-5 mt-3 d-flex align-items-center justify-content-center mb-0\">\n                      <CommonButton\n                        extraClassName=\"btn-lg btn-inline justify-content-center me-3\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        // onClick={() => loginSuccessfully()}\n                      >\n                        Submit\n                      </CommonButton>\n\n                      <CommonButton\n                        extraClassName=\"btn-lg btn-inline justify-content-center\"\n                        variant=\"secondary\"\n                        onClick={handleReset}\n                      >\n                        Reset\n                      </CommonButton>\n                    </div>\n                  </form>\n                )}\n              </Formik>\n            </>\n          </div>\n        </div>\n      </div>\n\n      <ModalComponent\n        backdrop\n        show={signupModal}\n        extraTitleClassName=\"d-none\"\n        modalExtraClass=\"signupModal\"\n      >\n        <div className=\"text-center\">\n          <div className=\"\">\n            <ImageElement\n              previewSource=\"/assets/images/admin/signup-success.png\"\n              className=\"img-fluid\"\n            />\n          </div>\n          <h3 className=\"mt-3\">Sign Up Successfully</h3>\n          <p>\n            You have successfully sign Up, <br />\n            You can close this window and continue using <br />\n            the Vishwatel service.\n          </p>\n          <div className=\"d-flex align-items-center justify-content-center\">\n            <CommonButton\n              extraClassName=\"btn-lg btn-inline justify-content-center me-3\"\n              variant=\"primary\"\n              //   onClick={() => {\n              //     setSigninModal(true);\n              //     setSignupModal(false);\n              //   }}\n              onClick={handleSignModal}\n            >\n              Sign In\n            </CommonButton>\n\n            <CommonButton\n              extraClassName=\"btn-lg btn-inline justify-content-center\"\n              variant=\"secondary\"\n              onClick={handleCloseModal}\n            >\n              Close\n            </CommonButton>\n          </div>\n        </div>\n      </ModalComponent>\n\n      {/* <ModalComponent\n        backdrop\n        show={signinModal}\n        extraTitleClassName=\"d-none\"\n        modalExtraClass=\"signupModal\"\n      >\n        <div className=\"text-center\">\n          <div className=\"\">\n            <ImageElement\n              previewSource=\"/assets/images/admin/signup-success.png\"\n              className=\"img-fluid\"\n            />\n          </div>\n          <h3 className=\"mt-3\">Sign In Successfully</h3>\n          <p>\n            You have successfully signed into your account. <br />\n            You can close this window and continue using the <br />\n            Vishwatel service.\n          </p>\n\n          <CommonButton\n            extraClassName=\"btn-lg btn-inline justify-content-center\"\n            variant=\"secondary\"\n            onClick={() => setSigninModal(false)}\n          >\n            Close\n          </CommonButton>\n        </div>\n      </ModalComponent> */}\n    </>\n  );\n}\n\nexport default Login;\n","export const validateEmailPhone = (text) => {\n  if (\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n      text\n    )\n  ) {\n    return true;\n  } else if (/^[6789][0-9]{9}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validatePassword = (text) => {\n  if (\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^)(#])[A-Za-z\\d@$!%*?&^)(#]{8,15}$/.test(\n      text\n    )\n  ) {\n    // Xyz@123!@#\n    return true;\n  }\n  return false;\n};\n\nexport const validatePincode = (pinCode) => {\n  if (/^[1-9][0-9]{5}$/.test(pinCode)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validatePan = (panNumber) => {\n  if (\n    /^([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}?$/.test(panNumber) &&\n    panNumber.charAt(3) === \"P\"\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateURL = (url) => {\n  const reg =\n    /^(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/;\n  return reg.test(String(url).toLowerCase());\n};\n\nexport const validateEmail = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexport const validateZipCode = (otp) => {\n  if (/^[0-9]{4}$/.test(otp)) {\n    return true;\n  }\n  return false;\n};\nexport const validateAddressText = (text) => {\n  if (text !== \"\" && text !== undefined) {\n    return true;\n  }\n  return false;\n};\nexport const validateNumber = (number) => {\n  if (/^\\d+$/.test(number)) {\n    return true;\n  }\n  return false;\n};\nexport const validateNumberWithDecimal = (number) => {\n  if (/^\\d+(\\.\\d{1,2})?$/.test(number)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateMobileEmpty = (number) => {\n  if (/^[6789][0-9]{9}$/.test(number)) {\n    return true;\n  }\n  if (number === \"\") return true;\n  return false;\n};\n\nexport const validateCurrency = (number) => {\n  if (/^[1-9][0-9,]{1,}$/.test(number)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateOtp = (otp) => {\n  if (/^([ESLOAN])\\w+([0-9]{4})$/.test(otp)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateText = (text) => {\n  // console.log(text)\n  if (/^[a-zA-Z.\\- ]{1,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\nexport const validateTextWithNum = (text) => {\n  // console.log(text)\n  if (/^[a-zA-Z0-9.\\- ]{1,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAlphanumericText = (text) => {\n  if (/^[a-zA-Z0-9!@#$&()/\\-`'.+,\" ]{1,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAlphanumericTextIfsc = (text) => {\n  if (/^[a-zA-Z0-9]{11}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAlphanumericTextCompany = (text) => {\n  if (/^[a-zA-Z0-9!@#$&()/\\-`'.+,\" ]{2,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAlphanumericWithoutSC = (text) => {\n  if (/^[a-z0-9]*$/i.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateTextForSearchInput = (text) => {\n  if (/^[\\w()-. -]{3,70}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAccountNumbers = (bankAccountNo, reaccountNumber) => {\n  if (bankAccountNo !== reaccountNumber) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAccountNo = (text) => {\n  if (/^\\d{6,18}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateReAccountNo = (text, accountNo) => {\n  if (/^\\d{6,18}$/.test(text) && text === accountNo) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateIfscCode = (text) => {\n  if (/^[A-Z|a-z]{4}[0][\\d]{6}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateUpiId = (text) => {\n  if (/^\\w+@\\w+$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateDate = (text) => {\n  if (\n    /^(19[5-9][0-9]|20[0-4][0-9]|2050)[-/](0?[1-9]|1[0-2])[-/](0?[1-9]|[12][0-9]|3[01])$/.test(\n      text\n    )\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateTextWithSplChars = (text) => {\n  if (/^[-a-zA-Z. ]{1,}$/.test(text)) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateMobile = (number) => {\n  if (/^[6789][0-9]{9}$/.test(number)) {\n    return true;\n  }\n  return false;\n};\n"],"names":["navigate","useNavigate","showPassword","setShowPassword","useState","repeatPassword","setRepeatPassword","signupModal","setSignupModal","signinModal","setSigninModal","showLoading","setShowLoading","handleReset","location","reload","disabledFutureDate","current","moment","endOf","_jsxs","_Fragment","children","_jsx","className","AuthLogo","Formik","initialValues","customerType","firstname","lastname","dob","company","email","module","password","confirm_password","billing_name","validationSchema","Yup","shape","max","required","test","value","validateEmailPhone","mobile","when","is","val","length","then","oneOf","onSubmit","values","console","log","async","payload","phoneNo","firstName","lastName","dateOfBirth","userType","data","response","signup","statusCode","alert","message","error","submitForm","_ref","errors","handleBlur","handleChange","handleSubmit","touched","setFieldValue","type","name","id","onChange","event","target","htmlFor","style","color","Row","Col","sm","TextInput","autoComplete","variant","placeholder","icon","disabled","DatePicker","disabledDate","formattedDate","str","date","Date","mnth","concat","getMonth","slice","day","getDate","year","getFullYear","dateConverter","TextPassword","toggleIcon","Link","to","onClick","e","preventDefault","CommonButton","extraClassName","ModalComponent","backdrop","show","extraTitleClassName","modalExtraClass","ImageElement","previewSource","handleSignModal","adminRouteMap","LOGIN","path","handleCloseModal","text"],"sourceRoot":""}